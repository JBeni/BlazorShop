@*
  <copyright file="ClotheDetails.razor" company="Beniamin Jitca">
   Copyright (c) Beniamin Jitca. All rights reserved.
  </copyright>
*@

@page "/clothes/view/{Id:int}"

@attribute [Authorize(Policy = StringRoleResources.Customer)]

@inject AuthenticationStateProvider AuthStateProvider
@inject IClotheService ClotheService
@inject ICartService CartService
@inject HttpInterceptorService Interceptor

<h3>View Clothe Details</h3>

@if (clothe.Id > 0)
{
    <div class="container">
        <div class="product">
            <div class="product-img">
                <img src="images/clothes/@clothe.ImagePath" alt="@clothe.ImageName" />
            </div>
            <div class="product-listing">
                <div class="content">
                    <h1 class="name">@clothe.Name</h1>
                    <p class="description">@clothe.Description</p>
                    <p class="price">$ @clothe.Price</p>

                    <div class="btn-and-rating-box">
                        <a href="clothes" class="btn btn-outline-dark" role="button"> &#8592; Back to Product</a>
                        <span style="margin-left: 15px;"></span>
                        <button type="button" class="btn btn-sm btn-outline-secondary"
                        @onclick="(async () => { await AddToCart(clothe); })">
                            Add To Cart &#8594;
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="d-flex justify-content-center" style="margin-top: 150px;">
        <h4 style="font-size: 45px;">No record found</h4>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }
    public int UserId { get; set; }
    public ClotheResponse clothe = new();

    public void Dispose() => Interceptor.DisposeEvent();

    /// <summary>
    /// Initialize the component on load.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        Interceptor.RegisterEvent();
        var authstate = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authstate.User;

        if (!user.Identity.IsAuthenticated) return;
        UserId = int.Parse(user.Claims.FirstOrDefault(x => x.Type == StringRoleResources.UserIdClaim).Value);
    }

    /// <summary>
    /// Initialize the component using the parameter.
    /// </summary>
    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            clothe = await ClotheService.GetClothe(Id);
        }
    }

    /// <summary>
    /// Add item to cart.
    /// </summary>
    private async Task AddToCart(ClotheResponse clothe)
    {
        CartResponse cartItem = new();

        cartItem.Name = clothe.Name;
        cartItem.Price = clothe.Price;
        cartItem.Amount = 1;
        cartItem.ClotheId = clothe.Id;
        cartItem.UserId = UserId;

        await CartService.AddCart(cartItem);
    }
}

<style>
    .container {
        width: 100%;
        position: relative;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 100px;
        font-family: "roboto", sans-serif;
    }

    .product {
        position: relative;
        width: 1000px;
        min-width: 350px;
        min-height: 500px;
        height: auto;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .product-img {
        width: 40%;
        height: 500px;
        background: #fff;
        position: relative;
        opacity: 0;
        transform: translateY(-50px);
        animation: fade-in 1s forwards 1;

        background: rgba( 174, 157, 157, 0.1 );
        box-shadow: 0 8px 20px 0 rgba( 31, 38, 135, 0.37 );
        backdrop-filter: blur( 3.5px );
        -webkit-backdrop-filter: blur( 3.5px );
        border-radius: 10px;
        border: 1px solid rgba( 255, 255, 255, 0.18 );
    }

    .product-img img {
        width: 100%;
        height: 100%;
        object-fit: contain;
        user-select: none;
    }

    .product-listing {
        width: 60%;
        min-height: 500px;
        height: auto;
        background: #292929;
        padding: 40px;
        display: flex;
        justify-content: center;
        color: #eae3d2;
        opacity: 0;
        transform: translateY(50px);
        animation: fade-in 1s forwards 1;
    }

    @@keyframes fade-in {
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .name {
        font-family: "dosis";
        font-size: 70px;
        text-transform: capitalize;
    }

    .description {
        font-size: 18px;
        line-height: 30px;
        margin: 50px 0;
    }

    .price {
        font-size: 70px;
        font-weight: 100;
        margin-bottom: 20px;
    }

    .btn-and-rating-box {
        width: 100%;
        display: flex;
        justify-content: space-between;
    }

    .btn {
        background: #eae3d2;
        color: #292929;
        border: none;
        text-transform: capitalize;
        font-size: 16px;
        padding: 10px 20px;
        cursor: pointer;
    }

    .btn:hover {
        background-color: #eedbaf;
    }

    @@media (max-width: 1100px) {
        .product {
            flex-direction: column;
            width: 90%;
            margin: 5vh 0;
        }
        .product-img {
            width: 100%;
            height: 300px;
        }
        .product-listing {
            width: 100%;
            min-height: auto;
        }
        .name,
        .price {
            font-size: 50px;
        }
        .description {
            font: 16px;
        }
    }
</style>
