@*
  <copyright file="Musics.razor" company="Beniamin Jitca">
   Copyright (c) Beniamin Jitca. All rights reserved.
  </copyright>
*@

@page "/admin/musics"

@attribute [Authorize(Policy = StringRoleResources.Admin)]

@inject IMusicService MusicService
@inject NavigationManager NavManager
@inject HttpInterceptorService Interceptor

@using Variant = MudBlazor.Variant;

<h1 class="display-3 font-weight-bold mb-0 text-primary mb-3">Music Songs List</h1>

<div class="row mb-4">
    <div class="col">
        <MatButtonLink Href="admin/musics/add" Raised="true">Add Music</MatButtonLink>
    </div>
</div>

@if (musicsList == null)
{
    <div class="d-flex justify-content-center" style="margin-top: 100px;">
        <h4 style="font-size: 45px;"><em>Loading the data...</em></h4>
    </div>
}
else
{
    @if (musicsList.Count > 0)
    {
        <MatTable Items="@musicsList" LoadInitialData="true" Striped="true" AllowSelection="true"
            RowClass="tester" FilterByColumnName="Title" DebounceMilliseconds="150" class="mat-elevation-z5">
            <MatTableHeader>
                <th>Id</th>
                <th>Title</th>
                <th>Description</th>
                <th>Author</th>
                <th>DateRelease</th>
                <th>ImageName</th>
                <th>ImagePath</th>
                <th>Actions</th>
            </MatTableHeader>

            <MatTableRow>
                <td>@String.Format("{0:d}", @context.Id)</td>
                <td class="col-md-2">@context.Title</td>
                <td class="col-md-6">@context.Description</td>
                <td>@context.Author</td>
                <td class="col-md-2">@context.DateRelease.ToString("dd/MM/yyyy")</td>
                <td>@context.ImageName</td>
                <td>@context.ImagePath</td>
                <td class="col-md-4">
                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Edit"
                        Color="Color.Success" @onclick="() => NavigateToPage(context.Id)">
                        Edit
                    </MudButton>
                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete"
                        Color="Color.Error" @onclick="(() => { DeleteConfirm(context.Id); ModalShow(); })">
                        Delete
                    </MudButton>
                </td>
            </MatTableRow>
        </MatTable>

        @if (showModal)
        {
            <div class="modal fade show" id="myModal" style="display:block; margin-top: 150px;" aria-modal="true" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="modal-title">Delete Music</h3>
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Close"
                                Color="Color.Warning" @onclick="@ModalCancel"
                                data-bs-dismiss="modal" aria-label="Close">
                                Close
                            </MudButton>
                        </div>
                        <div class="modal-body">
                            <h4>Do you want to delete this music?</h4>
                        </div>
                        <div class="modal-footer">
                            <MudButton class="mr-2" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete"
                                Color="Color.Error" @onclick="(async () => { await DeleteMusic(music.Id); ModalOk(); })">
                                Delete
                            </MudButton>
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Cancel"
                                Color="Color.Warning" @onclick="@ModalCancel">
                                Cancel
                            </MudButton>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="d-flex justify-content-center" style="margin-top: 150px;">
            <h4 style="font-size: 45px;">No record found</h4>
        </div>
    }
}

@code {
    bool showModal = false;

    void ModalShow() => showModal = true;
    void ModalCancel() => showModal = false;
    void ModalOk() => showModal = false;

    protected MusicResponse? music = new();
    protected List<MusicResponse>? musicsList { get; set; }

    public void Dispose() => Interceptor.DisposeEvent();

    /// <summary>
    /// Initialize the component on load.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        Interceptor.RegisterEvent();
        await GetMusics();
    }

    /// <summary>
    /// Get the musics.
    /// </summary>
    protected async Task GetMusics()
    {
        musicsList = await MusicService.GetMusics();
    }

    /// <summary>
    /// Confirm the delete operation.
    /// </summary>
    protected void DeleteConfirm(int Id)
    {
        music = musicsList.FirstOrDefault(x => x.Id == Id);
    }

    /// <summary>
    /// Delete the music.
    /// </summary>
    protected async Task DeleteMusic(int Id)
    {
        await MusicService.DeleteMusic(Id);
        await GetMusics();
    }

    /// <summary>
    /// Navigate.
    /// </summary>
    private void NavigateToPage(int id)
    {
        NavManager.NavigateTo($"admin/musics/edit/{id}");
    }
}

<style>
    label {
        width: 70%;
    }
</style>
